1. Using MAP

class Solution {
public:
    int numPairsDivisibleBy60(vector<int>& time) {
        unordered_map<int, int> mp;  
        int count = 0;
        for (int t : time) {
            int rem = t % 60;
            int comp = (60 - rem) % 60;
            if (mp.find(comp) != mp.end()) {
                count += mp[comp];
            }
            mp[rem]++;
        }
        return count;
    }
};


2. Optimised Solution

class Solution {
public:
    int numPairsDivisibleBy60(vector<int>& time) {
        int map[60] = {};
        int result = 0;
        for(auto x:time){
            int t = x % 60;
            int y = (60 - t)%60;
            result += map[y];
            map[t]++;
        }
        return result;
    }
};

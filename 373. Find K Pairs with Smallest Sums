class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        List<List<Integer>> result = new ArrayList<>();

        if (nums1.length == 0 || nums2.length == 0 || k ==0)
        return result;

        PriorityQueue<int[]> minHeap = new PriorityQueue<>(
            (a, b) -> Integer.compare(a[2], b[2])
        );

        for (int i = 0; i < Math.min(k, nums1.length); i++){
            minHeap.offer(new int[]{i, 0, nums1[i] + nums2[0]});
        }

        while (k --> 0 && !minHeap.isEmpty()){
            int[] curr = minHeap.poll();
            int i = curr[0], j = curr[1];

            result.add(Arrays.asList(nums1[i], nums2[j]));

            if (j+1 < nums2.length){
                minHeap.offer(new int[] {i, j + 1, nums1[i] + nums2[j + 1]});
            }
        }

        return result;
        
    }
}

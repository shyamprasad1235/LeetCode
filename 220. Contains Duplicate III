class Solution:
    def containsNearbyAlmostDuplicate(self, nums: List[int], indexDiff: int, valueDiff: int) -> bool:
        if valueDiff < 0 or indexDiff <= 0:
            return False

        bucket_size = valueDiff + 1 
        buckets = {}

        for i, num in enumerate(nums):
            bucket_id = num 
            if bucket_id in buckets:
                return True

            if (bucket_id - 1 in buckets and 
                abs(num - buckets[bucket_id - 1]) <= valueDiff):
                return True

            if (bucket_id + 1 in buckets and 
                abs(num - buckets[bucket_id + 1]) <= valueDiff):
                return True
            buckets[bucket_id] = num

            if i >= indexDiff:
                old_bucket_id = nums[i - indexDiff] // bucket_size
                # DO NOT adjust for negative numbers
                if old_bucket_id in buckets:
                    del buckets[old_bucket_id]

        return False

#include <stdio.h>
#include <stdlib.h>

int cmp(const void *a, const void *b) {
    int *ia = *(int **)a;
    int *ib = *(int **)b;
    return ia[0] - ib[0];
}

int** merge(int** intervals, int intervalsSize, int* intervalsColSize, 
            int* returnSize, int** returnColumnSizes) {
    
    if (intervalsSize == 0) {
        *returnSize = 0;
        *returnColumnSizes = NULL;
        return NULL;
    }

    qsort(intervals, intervalsSize, sizeof(int*), cmp);

    int writeIndex = 0;
    
    for (int i = 1; i < intervalsSize; i++) {
        if (intervals[i][0] <= intervals[writeIndex][1]) {

            if (intervals[i][1] > intervals[writeIndex][1])
                intervals[writeIndex][1] = intervals[i][1];
        } else {

            writeIndex++;
            intervals[writeIndex] = intervals[i];
        }
    }

    *returnColumnSizes = (int *)malloc(sizeof(int) * (writeIndex + 1));
    for (int i = 0; i <= writeIndex; i++)
        (*returnColumnSizes)[i] = 2;
    
    *returnSize = writeIndex + 1;
    return intervals;
}


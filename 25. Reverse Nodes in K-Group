struct ListNode* reverseKGroup(struct ListNode* head, int k) {
    if (!head || k == 1) return head;

    struct ListNode dummy;
    dummy.next = head;
    struct ListNode* prev_group = &dummy;

    while (1) {
        struct ListNode* current = prev_group->next;
        int count = 0;
        while (current && count < k) {
            current = current->next;
            count++;
        }
        
        if (count < k) break;

        struct ListNode* prev = prev_group->next;
        struct ListNode* curr = prev->next; 
        
        for (int i = 1; i < k; i++) {
            prev->next = curr->next;
            curr->next = prev_group->next;
            prev_group->next = curr;
            curr = prev->next;
        }
        prev_group = prev;
    }
    return dummy.next;    
}

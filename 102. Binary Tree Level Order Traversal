int** levelOrder(struct TreeNode* root, int* returnSize, int** returnColumnSizes) {
    if(!root){
        *returnSize = 0;
        *returnColumnSizes = NULL;
        return NULL;
    }
    struct TreeNode** queue = malloc(2000 * sizeof(struct TreeNode));
    int rear = 0, front = 0;

    int** result = malloc(2000 * sizeof(int*));
    *returnColumnSizes = malloc(2000 * sizeof(int*));

    queue[rear++] = root;
    int levelCount = 0;

    while(rear > front){
        int levelSize = rear - front;
        (*returnColumnSizes)[levelCount] = levelSize;
        result[levelCount] = malloc(levelSize * sizeof(int));

        for(int i = 0; i < levelSize; i++){
            struct TreeNode* node = queue[front++];
            result[levelCount][i] = node->val;

            if(node->left) queue[rear++] = node->left;
            if(node->right) queue[rear++] = node->right;
        }
        levelCount++;
    }
    *returnSize = levelCount;
    free(queue);
    return result;
}

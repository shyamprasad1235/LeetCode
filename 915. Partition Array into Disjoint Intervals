class Solution {
    public int partitionDisjoint(int[] nums) {
        int n = nums.length;

        // Arrays to store max of left part and min of right part
        int[] leftMax = new int[n];
        int[] rightMin = new int[n];

        // Fill the leftMax array
        leftMax[0] = nums[0];
        for (int i = 1; i < n; i++) {
            leftMax[i] = Math.max(leftMax[i - 1], nums[i]);
        }

        // Fill the rightMin array
        rightMin[n - 1] = nums[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            rightMin[i] = Math.min(rightMin[i + 1], nums[i]);
        }

        // Find the partition index
        for (int i = 0; i < n - 1; i++) {
            if (leftMax[i] <= rightMin[i + 1]) {
                return i + 1; // Partition point found
            }
        }

        return -1; // This case will never be reached
    }
}
